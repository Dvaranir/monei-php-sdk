<?php

/**
 * ActivateSubscriptionRequestTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Monei
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * MONEI API v1
 *
 * The MONEI API is organized around [REST](https://en.wikipedia.org/wiki/Representational_State_Transfer) principles. Our API is designed to be intuitive and developer-friendly.  ### Base URL  All API requests should be made to:  ``` https://api.monei.com/v1 ```  ### Environment  MONEI provides two environments:  - **Test Environment**: For development and testing without processing real payments - **Live Environment**: For processing real transactions in production  ### Client Libraries  We provide official SDKs to simplify integration:  - [PHP SDK](https://github.com/MONEI/monei-php-sdk) - [Python SDK](https://github.com/MONEI/monei-python-sdk) - [Node.js SDK](https://github.com/MONEI/monei-node-sdk) - [Postman Collection](https://postman.monei.com/)  Our SDKs handle authentication, error handling, and request formatting automatically.  You can download the OpenAPI specification from the https://js.monei.com/api/v1/openapi.json and generate your own client library using the [OpenAPI Generator](https://openapi-generator.tech/).  ### Important Requirements  - All API requests must be made over HTTPS - If you are not using our official SDKs, you **must provide a valid `User-Agent` header** with each request - Requests without proper authentication will return a `401 Unauthorized` error  ### Error Handling  The API returns consistent error codes and messages to help you troubleshoot issues. Each response includes a `statusCode` attribute indicating the outcome of your request.  ### Rate Limits  The API implements rate limiting to ensure stability. If you exceed the limits, requests will return a `429 Too Many Requests` status code.  # Authentication  <!-- Redoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.5.8
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Monei\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ActivateSubscriptionRequestTest Class Doc Comment
 *
 * @category    Class
 * @description ActivateSubscriptionRequest
 * @package     Monei
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ActivateSubscriptionRequestTest extends TestCase
{
    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ActivateSubscriptionRequest"
     */
    public function testActivateSubscriptionRequest()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $this->assertInstanceOf(\Monei\Model\ActivateSubscriptionRequest::class, $model);

        // Test with constructor parameters
        $data = [
            'payment_token' => 'test_value',
            'session_id' => 'test_123',
            'add_amount' => 1000,
            'sequence_id' => 'test_123',
            'complete_url' => 'https://example.com',
            'fail_url' => 'https://example.com',
            'cancel_url' => 'https://example.com',
            'metadata' => (object) ['test_key' => 'test_value'],
        ];

        $model = new \Monei\Model\ActivateSubscriptionRequest($data);
        $this->assertEquals($data['payment_token'], $model->getPaymentToken());
        $this->assertEquals($data['session_id'], $model->getSessionId());
        $this->assertEquals($data['add_amount'], $model->getAddAmount());
        $this->assertEquals($data['sequence_id'], $model->getSequenceId());
        $this->assertEquals($data['complete_url'], $model->getCompleteUrl());
        $this->assertEquals($data['fail_url'], $model->getFailUrl());
        $this->assertEquals($data['cancel_url'], $model->getCancelUrl());
        $this->assertEquals($data['metadata'], $model->getMetadata());
    }

    /**
     * Test attribute "payment_token"
     */
    public function testPropertyPaymentToken()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = 'test_value';
        $model->setPaymentToken($expected);
        $this->assertEquals($expected, $model->getPaymentToken());
    }

    /**
     * Test attribute "session_id"
     */
    public function testPropertySessionId()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = 'test_123';
        $model->setSessionId($expected);
        $this->assertEquals($expected, $model->getSessionId());
    }

    /**
     * Test attribute "add_amount"
     */
    public function testPropertyAddAmount()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = 1000;
        $model->setAddAmount($expected);
        $this->assertEquals($expected, $model->getAddAmount());
    }

    /**
     * Test attribute "sequence_id"
     */
    public function testPropertySequenceId()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = 'test_123';
        $model->setSequenceId($expected);
        $this->assertEquals($expected, $model->getSequenceId());
    }

    /**
     * Test attribute "complete_url"
     */
    public function testPropertyCompleteUrl()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = 'https://example.com';
        $model->setCompleteUrl($expected);
        $this->assertEquals($expected, $model->getCompleteUrl());
    }

    /**
     * Test attribute "fail_url"
     */
    public function testPropertyFailUrl()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = 'https://example.com';
        $model->setFailUrl($expected);
        $this->assertEquals($expected, $model->getFailUrl());
    }

    /**
     * Test attribute "cancel_url"
     */
    public function testPropertyCancelUrl()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = 'https://example.com';
        $model->setCancelUrl($expected);
        $this->assertEquals($expected, $model->getCancelUrl());
    }

    /**
     * Test attribute "metadata"
     */
    public function testPropertyMetadata()
    {
        $model = new \Monei\Model\ActivateSubscriptionRequest();
        $expected = (object) ['test_key' => 'test_value'];
        $model->setMetadata($expected);
        $this->assertEquals($expected, $model->getMetadata());
    }
}
